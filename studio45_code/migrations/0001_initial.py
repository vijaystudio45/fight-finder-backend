# Generated by Django 4.1.7 on 2023-06-01 06:58

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('role', models.IntegerField(choices=[(0, 'Admin'), (1, 'User')], default=1)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='username')),
                ('is_staff', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_image_update', models.ImageField(blank=True, null=True, upload_to='Profile_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('password', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('primary_number', models.CharField(blank=True, max_length=20)),
                ('mobile_number_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('address', models.TextField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=120)),
                ('state', models.CharField(blank=True, max_length=120)),
                ('country', models.CharField(blank=True, max_length=120, null=True)),
                ('forget_password_token', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_verify_token', models.CharField(blank=True, max_length=100)),
                ('email_verify_token', models.CharField(blank=True, max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('is_block', models.BooleanField(default=True)),
                ('about_me', models.TextField(blank=True, max_length=255)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('competition_level', models.CharField(blank=True, choices=[('Recreational', 'Recreational'), ('Amateur', 'Amateur'), ('Professional', 'Professional')], max_length=120, null=True)),
                ('zip_code', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=255, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token_expire_time', models.DateTimeField(blank=True, null=True)),
                ('Social_media_links', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Add_Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog-images/')),
                ('description', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Haiku',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line1', models.CharField(blank=True, max_length=255, null=True)),
                ('line2', models.CharField(blank=True, max_length=255, null=True)),
                ('line3', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PagesImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='test_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=2000, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_title', models.CharField(blank=True, max_length=2000, null=True)),
                ('comments_by_data_entry_associate', models.CharField(blank=True, max_length=2000, null=True)),
                ('is_more_information_coming_soon', models.CharField(blank=True, max_length=2000, null=True)),
                ('event_flyer_material', models.CharField(blank=True, max_length=2000, null=True)),
                ('online_registration_link', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('country', models.CharField(blank=True, max_length=2000, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=2000, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('image', models.ImageField(blank=True, null=True, upload_to='personal_images/')),
                ('martial_art_style', models.CharField(blank=True, max_length=120, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('message', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'UserContact',
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='Userbackgroundimage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='Userbackground_images/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SeminarInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=2000)),
                ('address', models.CharField(blank=True, max_length=2000, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=2000, null=True)),
                ('country', models.CharField(blank=True, max_length=2000, null=True)),
                ('first_name', models.CharField(max_length=2000)),
                ('last_name', models.CharField(max_length=2000)),
                ('phone_number', models.CharField(max_length=20)),
                ('organizer_email', models.EmailField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Seminar_images/')),
                ('social_media_links', models.CharField(max_length=2000)),
                ('does_this_event_accept_foreign_participants', models.CharField(default=False, max_length=2000)),
                ('why_is_this_seminar_only_open_to_this_group_of_people', models.CharField(blank=True, max_length=2000, null=True)),
                ('cost_of_seminar', models.CharField(max_length=2000)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('special_instructions', models.CharField(max_length=2000)),
                ('online_registration_link', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('details', models.CharField(max_length=2000)),
                ('created_at', models.DateField(auto_now=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('online_only', models.CharField(default=False, max_length=2000)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('martial_art_style', models.CharField(blank=True, max_length=120, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('event_flyer_material', models.CharField(blank=True, max_length=2000, null=True)),
                ('event_link', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('comments_by_data_entry_associate', models.CharField(blank=True, max_length=2000, null=True)),
                ('is_more_information_coming_soon', models.CharField(blank=True, max_length=2000, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('seminar_participants', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=2000, null=True)),
                ('tags', models.ManyToManyField(to='studio45_code.tag')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolGym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=2000, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_first_name', models.CharField(max_length=255)),
                ('owner_last_name', models.CharField(max_length=255)),
                ('owner_phone_number', models.CharField(max_length=20)),
                ('owner_email', models.EmailField(max_length=255)),
                ('price_min_ranges', models.IntegerField()),
                ('price_max_ranges', models.IntegerField()),
                ('days_of_operation', models.IntegerField()),
                ('hours_of_operation', models.CharField(max_length=255)),
                ('introduction', models.CharField(max_length=255)),
                ('owner_social_media_links', models.CharField(max_length=255)),
                ('special_instructions', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='schoolym_images/')),
                ('martial_art_style', models.CharField(blank=True, max_length=120, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=120, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('city', models.CharField(blank=True, max_length=2000, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('tags', models.ManyToManyField(to='studio45_code.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('contant', models.TextField()),
                ('created_at', models.DateField(auto_now=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=2000, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_title', models.CharField(blank=True, max_length=2000, null=True)),
                ('event_link', models.CharField(default='', max_length=700)),
                ('comments_by_data_entry_associate', models.CharField(blank=True, max_length=2000, null=True)),
                ('is_more_information_coming_soon', models.CharField(blank=True, max_length=2000, null=True)),
                ('event_flyer_material', models.CharField(blank=True, max_length=2000, null=True)),
                ('online_registration_link', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('country', models.CharField(blank=True, max_length=2000, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('time', models.TextField(blank=True, default=None, null=True)),
                ('contact_first_name', models.CharField(max_length=2000)),
                ('contact_last_name', models.CharField(max_length=2000)),
                ('contact_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_email', models.CharField(max_length=2000)),
                ('contact_social_media_links', models.CharField(max_length=2000)),
                ('does_this_event_accept_foreign_participants', models.CharField(blank=True, max_length=2000, null=True)),
                ('instructions_for_the_event', models.CharField(max_length=2000)),
                ('related_associations_or_organizations', models.CharField(blank=True, max_length=2000, null=True)),
                ('title', models.CharField(max_length=2000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Event_images/')),
                ('city', models.CharField(blank=True, max_length=2000, null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('status', models.BooleanField(default=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateField(auto_now=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('online_only', models.CharField(default=False, max_length=120)),
                ('martial_art_style', models.CharField(blank=True, max_length=120, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=120, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('event_participants', models.TextField(blank=True, null=True)),
                ('tags', models.ManyToManyField(blank=True, null=True, to='studio45_code.tag')),
            ],
        ),
        migrations.CreateModel(
            name='all_events_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Events', 'Events'), ('SeminarInformation', 'SeminarInformation'), ('SchoolGym', 'SchoolGym'), ('Personal', 'Personal')], max_length=255)),
                ('created_at', models.DateField(auto_now=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('events', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studio45_code.events')),
                ('personal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studio45_code.personal')),
                ('schoolgym', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studio45_code.schoolgym')),
                ('seminarnformation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studio45_code.seminarinformation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
